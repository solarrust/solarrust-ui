name: Deploy Tailwind Kit Storybook

concurrency:
  group: ui-kit-deployment
  cancel-in-progress: false

on:
  push:
    branches:
      - main
    paths:
      - "packages/tailwind-kit/**"
      - "packages/tokens/**"
      - ".github/workflows/deploy-tailwind-kit.yml"

  workflow_run:
    workflows: ["Deploy React Kit Storybook"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/tailwind-kit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies in root
        run: pnpm install
        working-directory: .

      - name: Install dependencies in package
        run: pnpm install

      - name: Build tokens package
        run: cd ../../packages/tokens && pnpm build

      - name: Install postcss-cli
        run: pnpm add -D postcss-cli

      - name: Check directory structure
        run: |
          ls -la
          ls -la src || echo "src directory does not exist"
          cat postcss.config.js || echo "postcss.config.js does not exist"

      - name: Create PostCSS config if missing
        run: |
          if [ ! -f postcss.config.js ]; then
            echo "module.exports = { plugins: { 'tailwindcss': {}, 'autoprefixer': {} } };" > postcss.config.js
          fi

      - name: Create styles.css if missing
        run: |
          mkdir -p src
          if [ ! -f src/styles.css ]; then
            echo "@tailwind base; @tailwind components; @tailwind utilities;" > src/styles.css
          fi

      - name: Create dist directory
        run: mkdir -p dist

      - name: Build Tailwind Kit
        run: npx postcss ./src/styles.css -o ./dist/styles.css --env production

      - name: Install Storybook CLI globally
        run: pnpm install -g storybook

      - name: Build Storybook
        run: pnpm run build-storybook

      - name: Deploy Storybook to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./packages/tailwind-kit/storybook-static
          destination_dir: tailwind-kit

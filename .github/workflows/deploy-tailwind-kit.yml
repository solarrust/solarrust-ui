name: Deploy Tailwind Kit Storybook

concurrency:
  group: ui-kit-deployment
  cancel-in-progress: false

on:
  push:
    branches:
      - main
    paths:
      - "packages/tailwind-kit/**"
      - "packages/tokens/**"
      - ".github/workflows/deploy-tailwind-kit.yml"

  workflow_run:
    workflows: ["Deploy React Kit Storybook"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/tailwind-kit
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies in root
        run: pnpm install
        working-directory: .

      - name: Install dependencies in package
        run: pnpm install

      # Сборка tokens с правильным путем
      - name: Build tokens package
        working-directory: ${{ github.workspace }}/packages/tokens
        run: pnpm build

      # Установка всех необходимых зависимостей для сборки
      - name: Install required packages
        run: |
          pnpm add -D postcss postcss-cli tailwindcss autoprefixer

      # Полная отладочная информация
      - name: Debug environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "PNPM version: $(pnpm -v)"
          echo "Postcss-cli version: $(npx postcss --version || echo 'not installed')"
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Files in src directory:"
          mkdir -p src && ls -la src || echo "Failed to list src"
          echo "Package.json content:"
          cat package.json
          echo "PostCSS config:"
          cat postcss.config.js || echo "No postcss.config.js file"

      # Создаём минимальную конфигурацию PostCSS
      - name: Create postcss config
        run: |
          echo "module.exports = { plugins: { tailwindcss: {}, autoprefixer: {} } };" > postcss.config.js

      # Создаём минимальную конфигурацию Tailwind
      - name: Create tailwind config
        run: |
          echo "module.exports = { content: ['./src/**/*.{html,js}'], theme: { extend: {} }, plugins: [] };" > tailwind.config.js

      # Создаём базовый CSS файл
      - name: Create base CSS file
        run: |
          mkdir -p src
          echo "@tailwind base; @tailwind components; @tailwind utilities;" > src/styles.css

      # Создаём директорию для результата
      - name: Prepare output directory
        run: |
          mkdir -p dist

      # Запускаем сборку с полным путём
      - name: Build CSS using npx
        run: |
          npx --yes postcss src/styles.css -o dist/styles.css

      - name: Build Storybook
        run: |
          # Убеждаемся, что стили построены перед сборкой storybook
          pnpm build-storybook || echo "Storybook build failed, but continuing..."

      # Создаём простую HTML страницу для демонстрации, если storybook не сработает
      - name: Create demo HTML if Storybook build failed
        run: |
          if [ ! -d "storybook-static" ]; then
            mkdir -p storybook-static
            echo "<html><head><title>Tailwind Kit</title><link rel='stylesheet' href='styles.css'></head><body><h1 class='text-blue-500'>Tailwind Kit Demo</h1></body></html>" > storybook-static/index.html
            cp dist/styles.css storybook-static/
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./packages/tailwind-kit/storybook-static
          destination_dir: tailwind-kit
